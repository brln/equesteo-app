// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingLeft": 20,
          "paddingRight": 20,
        }
      }
    >
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#5bc0eb",
            "borderColor": undefined,
            "borderRadius": 10,
            "borderWidth": null,
            "marginTop": 10,
            "opacity": 1,
            "paddingBottom": 10,
            "paddingTop": 10,
            "width": undefined,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#fff",
                "paddingLeft": 20,
                "paddingRight": 20,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Week
        </Text>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#4b9ec1",
            "borderColor": undefined,
            "borderRadius": 10,
            "borderWidth": null,
            "marginTop": 10,
            "opacity": 1,
            "paddingBottom": 10,
            "paddingTop": 10,
            "width": undefined,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#fff",
                "paddingLeft": 20,
                "paddingRight": 20,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Month
        </Text>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#4b9ec1",
            "borderColor": undefined,
            "borderRadius": 10,
            "borderWidth": null,
            "marginTop": 10,
            "opacity": 1,
            "paddingBottom": 10,
            "paddingTop": 10,
            "width": undefined,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#fff",
                "paddingLeft": 20,
                "paddingRight": 20,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Year
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingBottom": 10,
          "paddingLeft": 20,
          "paddingRight": 20,
        }
      }
    >
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#5bc0eb",
            "borderColor": undefined,
            "borderRadius": 10,
            "borderWidth": null,
            "marginTop": 10,
            "opacity": 1,
            "paddingBottom": 10,
            "paddingTop": 10,
            "width": undefined,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#fff",
                "paddingLeft": 20,
                "paddingRight": 20,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Distance
        </Text>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#4b9ec1",
            "borderColor": undefined,
            "borderRadius": 10,
            "borderWidth": null,
            "marginTop": 10,
            "opacity": 1,
            "paddingBottom": 10,
            "paddingTop": 10,
            "width": undefined,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#fff",
                "paddingLeft": 20,
                "paddingRight": 20,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Time
        </Text>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignSelf": "center",
            "backgroundColor": "#4b9ec1",
            "borderColor": undefined,
            "borderRadius": 10,
            "borderWidth": null,
            "marginTop": 10,
            "opacity": 1,
            "paddingBottom": 10,
            "paddingTop": 10,
            "width": undefined,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#fff",
                "paddingLeft": 20,
                "paddingRight": 20,
                "textAlign": "center",
              },
              undefined,
            ]
          }
        >
          Ascent
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "stretch",
          "backgroundColor": "#F5FCFF",
          "flex": 1,
          "justifyContent": "flex-start",
          "width": "100%",
        }
      }
    >
      <RCTScrollView
        style={
          Object {
            "borderTopColor": "#9b9d9b",
            "borderTopWidth": 2,
            "flex": 1,
          }
        }
      >
        <View>
          <RCTScrollView
            containerStyle={
              Object {
                "marginTop": 0,
              }
            }
            data={Object {}}
            disableVirtualization={false}
            getItem={[Function]}
            getItemCount={[Function]}
            horizontal={false}
            initialNumToRender={10}
            keyExtractor={[Function]}
            maxToRenderPerBatch={10}
            numColumns={1}
            onContentSizeChange={[Function]}
            onEndReachedThreshold={2}
            onLayout={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            updateCellsBatchingPeriod={50}
            viewabilityConfigCallbackPairs={Array []}
            windowSize={21}
          >
            <View />
          </RCTScrollView>
        </View>
      </RCTScrollView>
    </View>
  </View>
</RCTScrollView>
`;
