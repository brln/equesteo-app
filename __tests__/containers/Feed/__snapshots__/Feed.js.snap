// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        Object {
          "flex": 10,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "borderBottomWidth": 0.5,
            "borderColor": "#a7a6ab",
            "elevation": 3,
            "flexDirection": "row",
            "height": 50,
            "justifyContent": "space-around",
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
          },
          Object {
            "backgroundColor": "#F8F8F8",
          },
          Object {},
        ]
      }
    >
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
      >
        <View
          active={true}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#F8F8F8",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Object {
                "backgroundColor": "#5bc0eb",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#007aff",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontWeight": "600",
                  "marginLeft": 7,
                  "marginRight": 7,
                },
                Object {
                  "fontSize": 15,
                },
                Object {
                  "color": "white",
                },
                Object {
                  "color": "white",
                },
              ]
            }
            uppercase={false}
          >
            Following
          </Text>
        </View>
      </View>
      <View
        accessible={true}
        clickable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "opacity": 1,
          }
        }
      >
        <View
          active={false}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#F8F8F8",
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              },
              Object {
                "backgroundColor": "#5bc0eb",
              },
            ]
          }
        >
          <Text
            style={
              Array [
                Object {
                  "color": "#6b6b6b",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "marginLeft": 7,
                  "marginRight": 7,
                },
                Object {
                  "fontSize": 15,
                },
                undefined,
                Object {
                  "color": "#6b6b6b",
                },
              ]
            }
            uppercase={false}
          >
            You
          </Text>
        </View>
      </View>
      <View
        style={
          Object {
            "backgroundColor": "white",
            "bottom": 0,
            "height": 4,
            "left": 0,
            "position": "absolute",
            "width": 375,
          }
        }
      />
    </View>
    <RCTScrollView
      alwaysBounceVertical={false}
      automaticallyAdjustContentInsets={false}
      contentOffset={
        Object {
          "x": 0,
        }
      }
      directionalLockEnabled={true}
      horizontal={true}
      keyboardDismissMode="on-drag"
      keyboardShouldPersistTaps="handled"
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      pagingEnabled={true}
      scrollEnabled={false}
      scrollEventThrottle={16}
      scrollsToTop={false}
      showsHorizontalScrollIndicator={false}
    >
      <View>
        <View
          style={
            Object {
              "width": 750,
            }
          }
        >
          <View
            activeTabStyle={
              Object {
                "backgroundColor": "#5bc0eb",
              }
            }
            activeTextStyle={
              Object {
                "color": "white",
              }
            }
            heading="Following"
            style={
              Object {
                "backgroundColor": "#FFF",
                "flex": 1,
              }
            }
            tabStyle={
              Object {
                "backgroundColor": "#5bc0eb",
              }
            }
          >
            <RCTScrollView
              containerStyle={
                Object {
                  "marginTop": 0,
                }
              }
              data={Array []}
              disableVirtualization={false}
              getItem={[Function]}
              getItemCount={[Function]}
              horizontal={false}
              initialNumToRender={3}
              keyExtractor={[Function]}
              maxToRenderPerBatch={2}
              onContentSizeChange={[Function]}
              onEndReachedThreshold={2}
              onLayout={[Function]}
              onMomentumScrollEnd={[Function]}
              onRefresh={[Function]}
              onScroll={[Function]}
              onScrollBeginDrag={[Function]}
              onScrollEndDrag={[Function]}
              refreshControl={
                <RefreshControlMock
                  onRefresh={[Function]}
                  refreshing={false}
                />
              }
              refreshing={false}
              renderItem={[Function]}
              renderSectionHeader={[Function]}
              scrollEventThrottle={50}
              sections={Array []}
              stickyHeaderIndices={Array []}
              stickySectionHeadersEnabled={false}
              updateCellsBatchingPeriod={50}
              windowSize={21}
            >
              <RCTRefreshControl />
              <View />
            </RCTScrollView>
          </View>
        </View>
        <View
          style={
            Object {
              "width": 750,
            }
          }
        >
          <View
            heading="You"
          />
        </View>
      </View>
    </RCTScrollView>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#5bc0eb",
        "borderTopColor": "#e8eae8",
        "borderTopWidth": 1,
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "center",
        "paddingBottom": 5,
      }
    }
  >
    <View
      accessible={true}
      clickable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "opacity": 1,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 44.46666666666667,
            "width": 44.46666666666667,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "white",
            "fontSize": 10,
            "textAlign": "center",
          }
        }
      >
        Go Ride!
      </Text>
    </View>
    <View
      accessible={true}
      clickable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "opacity": 1,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 44.46666666666667,
            "width": 44.46666666666667,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "white",
            "fontSize": 10,
            "textAlign": "center",
          }
        }
      >
        Training
      </Text>
    </View>
    <View
      accessible={true}
      clickable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "opacity": 1,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 44.46666666666667,
            "width": 44.46666666666667,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "white",
            "fontSize": 10,
            "textAlign": "center",
          }
        }
      >
        Leaderboards
      </Text>
    </View>
    <View
      accessible={true}
      clickable={true}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "flex": 1,
          "opacity": 1,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 44.46666666666667,
            "width": 44.46666666666667,
          }
        }
      />
      <Text
        style={
          Object {
            "color": "white",
            "fontSize": 10,
            "textAlign": "center",
          }
        }
      >
        More
      </Text>
    </View>
  </View>
</View>
`;
