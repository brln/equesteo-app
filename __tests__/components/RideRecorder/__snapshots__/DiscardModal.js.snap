// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders 1`] = `<View />`;

exports[`renders more when open 1`] = `
<Modal
  hardwareAccelerated={true}
  onRequestClose={[Function]}
  supportedOrientations={
    Array [
      "landscape",
      "portrait",
      "portrait-upside-down",
    ]
  }
  transparent={true}
  visible={true}
>
  <View
    accessibilityViewIsModal={true}
    importantForAccessibility="yes"
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "backgroundColor": "rgba(0,0,0,0)",
          "zIndex": 2,
        },
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
      ]
    }
  >
    <View
      onLayout={[Function]}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View
        accessible={true}
        importantForAccessibility="no"
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <View
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
              Object {
                "backgroundColor": "black",
                "opacity": 0.5,
              },
            ]
          }
        />
      </View>
      <View
        onLayout={[Function]}
        onMoveShouldSetResponder={[Function]}
        onMoveShouldSetResponderCapture={[Function]}
        onResponderEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderStart={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "height": 333.5,
            "justifyContent": "center",
            "marginTop": 30,
            "transform": Array [
              Object {
                "translateY": 1334,
              },
              Object {
                "translateX": 0,
              },
            ],
            "width": 600,
          }
        }
      >
        <View
          accessible={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "bottom": 0,
                "left": 0,
                "position": "absolute",
                "right": 0,
                "top": 0,
              },
            ]
          }
        />
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "justifyContent": "center",
              "paddingLeft": 20,
              "paddingRight": 20,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            Go Away.
          </Text>
        </View>
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "height": 20,
            }
          }
        >
          <View
            style={
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
                "width": 300,
              }
            }
          >
            <View
              style={
                Object {
                  "margin": 20,
                  "width": 80,
                }
              }
            >
              <View
                accessibilityComponentType="button"
                accessibilityTraits={
                  Array [
                    "button",
                  ]
                }
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {},
                    ]
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 18,
                          "padding": 8,
                          "textAlign": "center",
                        },
                        Object {
                          "color": "red",
                        },
                      ]
                    }
                  >
                    Yes
                  </Text>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "margin": 20,
                  "width": 80,
                }
              }
            >
              <View
                accessibilityComponentType="button"
                accessibilityTraits={
                  Array [
                    "button",
                  ]
                }
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {},
                    ]
                  }
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Array [
                        Object {
                          "color": "#007AFF",
                          "fontSize": 18,
                          "padding": 8,
                          "textAlign": "center",
                        },
                      ]
                    }
                  >
                    No
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`renders very little when closed 1`] = `<View />`;
